<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.upms.common.dao.UserRoleMapper">
    <resultMap id="BaseResultMap" type="com.mt.upms.common.model.UserRole">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="company_id" jdbcType="INTEGER" property="companyId" />
        <result column="dep_id" jdbcType="INTEGER" property="depId" />
        <result column="uid" jdbcType="BIGINT" property="uid" />
        <result column="role_id" jdbcType="BIGINT" property="roleId" />
        <result column="is_active" jdbcType="BIT" property="isActive" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="status" jdbcType="TINYINT" property="status" />
    </resultMap>
    <sql id="Base_Column_List">
        id, company_id, dep_id, uid, role_id, is_active, created_at, updated_at, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.mt.upms.common.model.UserRole">
        insert into user_role (id, company_id, dep_id,
        uid, role_id, is_active, created_at,
        updated_at, status)
        values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=INTEGER}, #{depId,jdbcType=INTEGER},
        #{uid,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{isActive,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP},
        #{updatedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.mt.upms.common.model.UserRole">
        insert into user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="depId != null">
                dep_id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="depId != null">
                #{depId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=BIT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mt.upms.common.model.UserRole">
        update user_role
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="depId != null">
                dep_id = #{depId,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=BIT},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mt.upms.common.model.UserRole">
        update user_role
        set company_id = #{companyId,jdbcType=INTEGER},
        dep_id = #{depId,jdbcType=INTEGER},
        uid = #{uid,jdbcType=BIGINT},
        role_id = #{roleId,jdbcType=BIGINT},
        is_active = #{isActive,jdbcType=BIT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>



    <!-- ************* 自定义 ************** -->

    <select id="selectByCompanyIdAndUid"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_role
        where  status = 1
        and company_id = #{companyId, jdbcType=INTEGER}
        and uid = #{uid,jdbcType=BIGINT}
    </select>


    <!--Alnwick 添加-->
    <insert id="insertIgnoreRoleResource" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
        insert ignore INTO role_resource
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test=" role_id != null and role_id!=''" >
                role_id,
            </if>
            <if test="company_id != null and company_id !=''" >
                company_id,
            </if>
            <if test="permission_ids != null and permission_ids !=''" >
                permission_ids,
            </if>
            <if test="resource_id != null and resource_id !=''">
                resource_id,
            </if>
            <if test="created_at != null and created_at !=''" >
                created_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="role_id != null and role_id !=''" >
                #{role_id},
            </if>
            <if test="company_id != null and company_id !=''" >
                #{company_id},
            </if>
            <if test="permission_ids != null and permission_ids !=''" >
                #{permission_ids},
            </if>
            <if test="resource_id != null and resource_id != ''" >
                #{resource_id},
            </if>
            <if test="created_at != null and created_at !=''" >
                #{created_at},
            </if>
        </trim>
    </insert>


    <update id="updateDepId" parameterType="map">
      UPDATE user_role
      set   role_id = #{roleId,jdbcType=BIGINT},
            updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            dep_id = #{new_dep_id}
      where
           uid = #{uid} and dep_id = #{dep_id} and company_id = #{company_id}

  </update>

  <select id="selectByCompanyIdAndUidAndRoleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_role
    where status = 1
    and company_id = #{companyId}
    and uid = #{uid}
    and role_id = #{roleId}
  </select>

    <select id="selectByCompanyIdAndDepIdAndUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_role
        where status = 1
        and company_id = #{companyId}
        and dep_id = #{depId}
        and uid = #{uid}
    </select>

    <update id="updateRoleId" parameterType="map">
      UPDATE  user_role
      SET
          role_id = #{role_id},
           updated_at = #{updated_at}
      where
          uid = #{to_uid} and dep_id = #{dep_id} and company_id = #{company_id}
  </update>

    <select id="getRoleCode" parameterType="map" resultType="string">
    SELECT r.role from role r , user_role ur
    WHERE
    ur.uid = #{uid} and ur.dep_id = #{dep_id} and ur.company_id = #{company_id} and r.id = ur.role_id

    </select>

    <select id="selectByCompanyIdAndDepIdAndRoleCode" resultMap="BaseResultMap">
        SELECT
        a.*
        from user_role a
        INNER JOIN role b on a.role_id = b.id
        where a.status = 1
        and a.company_id = #{company_id}
        and a.dep_id = #{dep_id}
        and b.role = #{role_code}
    </select>

    <select id="selectRoleExistence" parameterType="com.mt.upms.common.model.UserRole" resultType="int">
       SELECT count(*) FROM user_role WHERE company_id = #{companyId} and dep_id = #{depId} and uid = #{uid}
    </select>

    <select id="isHasRole" parameterType="map" resultType="java.lang.Integer">
        SELECT count(1) from user_role
        where status = 1
        and company_id = #{companyId}
        and uid = #{uid}
        and role_id = #{roleId}
    </select>

</mapper>