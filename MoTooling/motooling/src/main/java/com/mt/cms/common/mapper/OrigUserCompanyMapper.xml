<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.cms.common.dao.OrigUserCompanyMapper">
    <resultMap id="BaseResultMap" type="com.mt.cms.common.model.OrigUserCompany">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="uid" jdbcType="BIGINT" property="uid" />
        <result column="company_id" jdbcType="INTEGER" property="companyId" />
        <result column="dep_id" jdbcType="INTEGER" property="depId" />
        <result column="role_code" jdbcType="CHAR" property="roleCode" />
        <result column="handler_id" jdbcType="BIGINT" property="handlerId" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="position_code" jdbcType="INTEGER" property="positionCode" />
        <result column="position_name" jdbcType="VARCHAR" property="positionName" />
        <result column="work_name" jdbcType="VARCHAR" property="workName" />
        <result column="work_email" jdbcType="VARCHAR" property="workEmail" />
        <result column="work_state" jdbcType="VARCHAR" property="workState" />
        <result column="work_phone" jdbcType="VARCHAR" property="workPhone" />
        <result column="is_active" jdbcType="BIT" property="isActive" />
    </resultMap>
    <sql id="Base_Column_List">
        id, uid, company_id, dep_id, role_code, handler_id, created_at, updated_at, status,
        position_code, position_name, work_name, work_email, work_state, work_phone, is_active
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_company
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user_company
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.mt.cms.common.model.OrigUserCompany">
        insert into user_company (id, uid, company_id,
        dep_id, role_code, handler_id,
        created_at, updated_at, status,
        position_code, position_name, work_name,
        work_email, work_state, work_phone,
        is_active)
        values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{companyId,jdbcType=INTEGER},
        #{depId,jdbcType=INTEGER}, #{roleCode,jdbcType=CHAR}, #{handlerId,jdbcType=BIGINT},
        #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT},
        #{positionCode,jdbcType=INTEGER}, #{positionName,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR},
        #{workEmail,jdbcType=VARCHAR}, #{workState,jdbcType=VARCHAR}, #{workPhone,jdbcType=VARCHAR},
        #{isActive,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.mt.cms.common.model.OrigUserCompany">
        insert into user_company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="depId != null">
                dep_id,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="handlerId != null">
                handler_id,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="positionCode != null">
                position_code,
            </if>
            <if test="positionName != null">
                position_name,
            </if>
            <if test="workName != null">
                work_name,
            </if>
            <if test="workEmail != null">
                work_email,
            </if>
            <if test="workState != null">
                work_state,
            </if>
            <if test="workPhone != null">
                work_phone,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="depId != null">
                #{depId,jdbcType=INTEGER},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=CHAR},
            </if>
            <if test="handlerId != null">
                #{handlerId,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="positionCode != null">
                #{positionCode,jdbcType=INTEGER},
            </if>
            <if test="positionName != null">
                #{positionName,jdbcType=VARCHAR},
            </if>
            <if test="workName != null">
                #{workName,jdbcType=VARCHAR},
            </if>
            <if test="workEmail != null">
                #{workEmail,jdbcType=VARCHAR},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=VARCHAR},
            </if>
            <if test="workPhone != null">
                #{workPhone,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mt.cms.common.model.OrigUserCompany">
        update user_company
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="depId != null">
                dep_id = #{depId,jdbcType=INTEGER},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=CHAR},
            </if>
            <if test="handlerId != null">
                handler_id = #{handlerId,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="positionCode != null">
                position_code = #{positionCode,jdbcType=INTEGER},
            </if>
            <if test="positionName != null">
                position_name = #{positionName,jdbcType=VARCHAR},
            </if>
            <if test="workName != null">
                work_name = #{workName,jdbcType=VARCHAR},
            </if>
            <if test="workEmail != null">
                work_email = #{workEmail,jdbcType=VARCHAR},
            </if>
            <if test="workState != null">
                work_state = #{workState,jdbcType=VARCHAR},
            </if>
            <if test="workPhone != null">
                work_phone = #{workPhone,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mt.cms.common.model.OrigUserCompany">
        update user_company
        set uid = #{uid,jdbcType=BIGINT},
        company_id = #{companyId,jdbcType=INTEGER},
        dep_id = #{depId,jdbcType=INTEGER},
        role_code = #{roleCode,jdbcType=CHAR},
        handler_id = #{handlerId,jdbcType=BIGINT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT},
        position_code = #{positionCode,jdbcType=INTEGER},
        position_name = #{positionName,jdbcType=VARCHAR},
        work_name = #{workName,jdbcType=VARCHAR},
        work_email = #{workEmail,jdbcType=VARCHAR},
        work_state = #{workState,jdbcType=VARCHAR},
        work_phone = #{workPhone,jdbcType=VARCHAR},
        is_active = #{isActive,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>



    <!-- *******自定义******** -->

    <update id="batchDelete" parameterType="map">
        UPDATE user_company set dep_id = null,role_code=null
        WHERE company_id = #{companyId} and dep_id=#{depId}  and uid IN
        <foreach item="memberIds" collection="memberIds" open="(" separator="," close=")">
            #{memberIds}
        </foreach>
    </update>

    <delete id="batchDeleteNull"  parameterType="map">
        DELETE  FROM  user_company WHERE
        company_id = #{companyId} and dep_id is NULL and uid IN
        <foreach item="memberIds" collection="memberIds" open="(" separator="," close=")">
            #{memberIds}
        </foreach>
    </delete>

    <update id="updateDepId" parameterType="map">
        UPDATE user_company set dep_id = null
        WHERE
        company_id = #{companyId} and dep_id IN
        <foreach  item="depId" collection="depIds" open="(" separator="," close=")">
            #{depId}
        </foreach>
    </update>

    <update id="updateDepids" parameterType="map">
         UPDATE user_company set dep_id = #{depId} , role_code=null
        <where>
            company_id = #{companyId}
            <if test="dep_id == null and dep_id =='' "> and dep_id is null </if>
            <if test="dep_id != null ">and dep_id=#{userDepId}</if>
            and uid IN
            <foreach item="memberIds" collection="memberIds" open="(" separator="," close=")">
                #{memberIds}
            </foreach>
        </where>
    </update>


    <insert id="insertUser" parameterType="map">
        insert into user_company (uid, company_id,dep_id )
        values
        <foreach collection="memberIds" item="memberIds"  separator="," >
            (#{memberIds},#{companyId},#{depId})
        </foreach>
    </insert>

    <select id="" >
        select COUNT(1) from user_company WHERE company_id = #{companyId} and  dep_id = #{depId} and role_code != ""
    </select>

    <select id="selectIds" resultType="map" >
       select id,count(1) as count from user_company group by uid,company_id,dep_id having count>1;
    </select>

    <select id="selectUser" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_company
        <where>
            <if test=" companyId != null ">
                company_id = #{companyId}
            </if>
            <if test=" uId != null">
               AND uid = #{uId}
            </if>
            <if test="dep_id != null and dep_id != ''">
                and dep_id = #{userDepId}
            </if>
        </where>
         LIMIT 0,1
    </select>

    <delete id="deleteUser" parameterType="map">
       delete from user_company
        <where>
            <if test=" companyId != null ">
                company_id = #{companyId}
            </if>
            <if test=" uId != null">
                AND uid = #{uId}
            </if>
            <if test="dep_id != null and dep_id != ''">
                and dep_id = #{userDepId}
            </if>
        </where>
    </delete>

    <select id="selectUserCompanyByUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
         from user_company
        where uid = #{uid, jdbcType=BIGINT}
        and company_id = #{companyId, jdbcType=INTEGER}
        limit 1
    </select>

    <select id="selectUserCompanyByDepIdAndUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_company
        where company_id = #{companyId, jdbcType=INTEGER}
        and  ( #{depId} is null or dep_id = #{depId} )
        and ( #{uid} = null or uid = #{uid} )
        limit 1
    </select>

    <select id="selectUserCompanyListByDepIdAndUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_company
        where company_id = #{companyId, jdbcType=INTEGER}
        and  ( #{depId} is null or dep_id = #{depId} )
        and ( #{uid} = null or uid = #{uid} )
        order by work_name
    </select>

    <insert id="addUserCompany" parameterType="map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
        insert into user_company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null  and uid !=''">
                uid,
            </if>
            <if test="company_id != null and company_id !=''">
                company_id,
            </if>
            <if test="dep_id != null and dep_id !=''">
                dep_id,
            </if>
            <if test="role_code != null and role_code !=''">
                role_code,
            </if>
            <if test="is_active != null and is_active !=''">
                is_active,
            </if>
            <if test="created_at != null and created_at !=''">
                created_at,
            </if>
            <if test="updated_at != null and updated_at !=''">
                updated_at,
            </if>
            <if test="status != null and status !=''">
                status,
            </if>
            <if test="position_code != null and position_code !=''">
                position_code,
            </if>
            <if test="position_name != null and position_name !=''">
                position_name,
            </if>
            <if test="work_name != null and work_name !=''">
                work_name,
            </if>
            <if test="work_email != null and work_email !=''">
                work_email,
            </if>
            <if test="work_state != null and work_state !=''">
                work_state,
            </if>
            <if test="work_phone != null and work_phone !=''">
                work_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null  and uid !=''">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="company_id != null and company_id !=''">
                #{company_id,jdbcType=INTEGER},
            </if>
            <if test="dep_id != null and dep_id !=''">
                #{dep_id,jdbcType=INTEGER},
            </if>
            <if test="role_code != null and role_code !=''">
                #{role_code,jdbcType=CHAR},
            </if>
            <if test="is_active != null and is_active !=''">
                #{is_active,jdbcType=BIT},
            </if>
            <if test="created_at != null and created_at !=''">
                #{created_at,jdbcType=TIMESTAMP},
            </if>
            <if test="updated_at != null and updated_at !=''">
                #{updated_at,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null and status !=''">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="position_code != null and position_code !=''">
                #{position_code,jdbcType=INTEGER},
            </if>
            <if test="position_name != null and position_name !=''">
                #{position_name,jdbcType=VARCHAR},
            </if>
            <if test="work_name != null and work_name !=''">
                #{work_name,jdbcType=VARCHAR},
            </if>
            <if test="work_email != null and work_email !=''">
                #{work_email,jdbcType=VARCHAR},
            </if>
            <if test="work_state != null and work_state !=''">
                #{work_state,jdbcType=VARCHAR},
            </if>
            <if test="work_phone != null and work_phone !=''">
                #{work_phone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateUserCompany" parameterType="map">
        update user_company
        <set>
            <if test="company_id != null and company_id !=''">
                company_id = #{company_id,jdbcType=INTEGER},
            </if>
            <if test="dep_id != null and dep_id !=''">
                dep_id = #{dep_id,jdbcType=INTEGER},
            </if>
            <if test="role_code != null and role_code !=''">
                role_code = #{role_code,jdbcType=CHAR},
            </if>
            <if test="is_active != null and is_active !=''">
                is_active = #{is_active,jdbcType=BIT},
            </if>
            <if test="created_at != null and created_at !=''">
                created_at = #{created_at,jdbcType=TIMESTAMP},
            </if>
            <if test="updated_at != null and updated_at !=''">
                updated_at = #{updated_at,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null and status !=''">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="position_code != null and position_code !=''">
                position_code = #{position_code,jdbcType=INTEGER},
            </if>
            <if test="position_name != null and position_name !=''">
                position_name = #{position_name,jdbcType=VARCHAR},
            </if>
            <if test="work_name != null and work_name !=''">
                work_name = #{work_name,jdbcType=VARCHAR},
            </if>
            <if test="work_email != null and work_email !=''">
                work_email = #{work_email,jdbcType=VARCHAR},
            </if>
            <if test="work_state != null and work_state !=''">
                work_state = #{work_state,jdbcType=VARCHAR},
            </if>
            <if test="work_phone != null and work_phone !=''">
                work_phone = #{work_phone,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectValidUserCompanyByDepIdAndUid" resultMap="BaseResultMap">
        SELECT
         <include refid="Base_Column_List"/>
        from user_company
        where status = 1
        and IFNULL(work_state, '') <![CDATA[ <> ]]> '3'
        and company_id = #{companyId}
        and (#{depId} is null or #{depId} = dep_id)
        and (#{uid} is null or #{uid} = uid)
    </select>
</mapper>