<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.pm.common.dao.PmTicketConfirmMapper">
  <resultMap id="BaseResultMap" type="com.mt.pm.common.model.PmTicketConfirm">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="batch_proc_Id" jdbcType="BIGINT" property="batchProcId" />
    <result column="po_id" jdbcType="BIGINT" property="poId" />
    <result column="pop_id" jdbcType="BIGINT" property="popId" />
    <result column="confirm_no" jdbcType="VARCHAR" property="confirmNo" />
    <result column="confirm_seq" jdbcType="INTEGER" property="confirmSeq" />
    <result column="confirm_type" jdbcType="CHAR" property="confirmType" />
    <result column="confirm_flag" jdbcType="CHAR" property="confirmFlag" />
    <result column="confirm_qty" jdbcType="INTEGER" property="confirmQty" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="is_leading" jdbcType="CHAR" property="isLeading" />
    <result column="real_machine_time" jdbcType="DECIMAL" property="realMachineTime" />
    <result column="real_labor_time" jdbcType="DECIMAL" property="realLaborTime" />
    <result column="real_other_time" jdbcType="DECIMAL" property="realOtherTime" />
    <result column="real_start_time" jdbcType="TIMESTAMP" property="realStartTime" />
    <result column="real_finish_time" jdbcType="TIMESTAMP" property="realFinishTime" />
    <result column="proc_mins" jdbcType="DECIMAL" property="procMins" />
    <result column="real_cost" jdbcType="DECIMAL" property="realCost" />
    <result column="other_work_price" jdbcType="DECIMAL" property="otherWorkPrice" />
    <result column="machine_work_price" jdbcType="DECIMAL" property="machineWorkPrice" />
    <result column="labor_work_price" jdbcType="DECIMAL" property="laborWorkPrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="handler_id" jdbcType="BIGINT" property="handlerId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, batch_proc_Id, po_id, pop_id, confirm_no, confirm_seq, confirm_type, confirm_flag,
    confirm_qty, device_id, member_id, is_leading, real_machine_time, real_labor_time,
    real_other_time, real_start_time, real_finish_time, proc_mins, real_cost, other_work_price,
    machine_work_price, labor_work_price, remark, handler_id, created_at, updated_at,
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pm_ticket_confirm
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pm_ticket_confirm
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mt.pm.common.model.PmTicketConfirm">
    insert into pm_ticket_confirm (id, batch_proc_Id, po_id,
    pop_id, confirm_no, confirm_seq,
    confirm_type, confirm_flag, confirm_qty,
    device_id, member_id, is_leading,
    real_machine_time, real_labor_time, real_other_time,
    real_start_time, real_finish_time, proc_mins,
    real_cost, other_work_price, machine_work_price,
    labor_work_price, remark, handler_id,
    created_at, updated_at, status
    )
    values (#{id,jdbcType=BIGINT}, #{batchProcId,jdbcType=BIGINT}, #{poId,jdbcType=BIGINT},
    #{popId,jdbcType=BIGINT}, #{confirmNo,jdbcType=VARCHAR}, #{confirmSeq,jdbcType=INTEGER},
    #{confirmType,jdbcType=CHAR}, #{confirmFlag,jdbcType=CHAR}, #{confirmQty,jdbcType=INTEGER},
    #{deviceId,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{isLeading,jdbcType=CHAR},
    #{realMachineTime,jdbcType=DECIMAL}, #{realLaborTime,jdbcType=DECIMAL}, #{realOtherTime,jdbcType=DECIMAL},
    #{realStartTime,jdbcType=TIMESTAMP}, #{realFinishTime,jdbcType=TIMESTAMP}, #{procMins,jdbcType=DECIMAL},
    #{realCost,jdbcType=DECIMAL}, #{otherWorkPrice,jdbcType=DECIMAL}, #{machineWorkPrice,jdbcType=DECIMAL},
    #{laborWorkPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{handlerId,jdbcType=BIGINT},
    #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.mt.pm.common.model.PmTicketConfirm">
    insert into pm_ticket_confirm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchProcId != null">
        batch_proc_Id,
      </if>
      <if test="poId != null">
        po_id,
      </if>
      <if test="popId != null">
        pop_id,
      </if>
      <if test="confirmNo != null">
        confirm_no,
      </if>
      <if test="confirmSeq != null">
        confirm_seq,
      </if>
      <if test="confirmType != null">
        confirm_type,
      </if>
      <if test="confirmFlag != null">
        confirm_flag,
      </if>
      <if test="confirmQty != null">
        confirm_qty,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="isLeading != null">
        is_leading,
      </if>
      <if test="realMachineTime != null">
        real_machine_time,
      </if>
      <if test="realLaborTime != null">
        real_labor_time,
      </if>
      <if test="realOtherTime != null">
        real_other_time,
      </if>
      <if test="realStartTime != null">
        real_start_time,
      </if>
      <if test="realFinishTime != null">
        real_finish_time,
      </if>
      <if test="procMins != null">
        proc_mins,
      </if>
      <if test="realCost != null">
        real_cost,
      </if>
      <if test="otherWorkPrice != null">
        other_work_price,
      </if>
      <if test="machineWorkPrice != null">
        machine_work_price,
      </if>
      <if test="laborWorkPrice != null">
        labor_work_price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="handlerId != null">
        handler_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="batchProcId != null">
        #{batchProcId,jdbcType=BIGINT},
      </if>
      <if test="poId != null">
        #{poId,jdbcType=BIGINT},
      </if>
      <if test="popId != null">
        #{popId,jdbcType=BIGINT},
      </if>
      <if test="confirmNo != null">
        #{confirmNo,jdbcType=VARCHAR},
      </if>
      <if test="confirmSeq != null">
        #{confirmSeq,jdbcType=INTEGER},
      </if>
      <if test="confirmType != null">
        #{confirmType,jdbcType=CHAR},
      </if>
      <if test="confirmFlag != null">
        #{confirmFlag,jdbcType=CHAR},
      </if>
      <if test="confirmQty != null">
        #{confirmQty,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="isLeading != null">
        #{isLeading,jdbcType=CHAR},
      </if>
      <if test="realMachineTime != null">
        #{realMachineTime,jdbcType=DECIMAL},
      </if>
      <if test="realLaborTime != null">
        #{realLaborTime,jdbcType=DECIMAL},
      </if>
      <if test="realOtherTime != null">
        #{realOtherTime,jdbcType=DECIMAL},
      </if>
      <if test="realStartTime != null">
        #{realStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realFinishTime != null">
        #{realFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procMins != null">
        #{procMins,jdbcType=DECIMAL},
      </if>
      <if test="realCost != null">
        #{realCost,jdbcType=DECIMAL},
      </if>
      <if test="otherWorkPrice != null">
        #{otherWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="machineWorkPrice != null">
        #{machineWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="laborWorkPrice != null">
        #{laborWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="handlerId != null">
        #{handlerId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mt.pm.common.model.PmTicketConfirm">
    update pm_ticket_confirm
    <set>
      <if test="batchProcId != null">
        batch_proc_Id = #{batchProcId,jdbcType=BIGINT},
      </if>
      <if test="poId != null">
        po_id = #{poId,jdbcType=BIGINT},
      </if>
      <if test="popId != null">
        pop_id = #{popId,jdbcType=BIGINT},
      </if>
      <if test="confirmNo != null">
        confirm_no = #{confirmNo,jdbcType=VARCHAR},
      </if>
      <if test="confirmSeq != null">
        confirm_seq = #{confirmSeq,jdbcType=INTEGER},
      </if>
      <if test="confirmType != null">
        confirm_type = #{confirmType,jdbcType=CHAR},
      </if>
      <if test="confirmFlag != null">
        confirm_flag = #{confirmFlag,jdbcType=CHAR},
      </if>
      <if test="confirmQty != null">
        confirm_qty = #{confirmQty,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="isLeading != null">
        is_leading = #{isLeading,jdbcType=CHAR},
      </if>
      <if test="realMachineTime != null">
        real_machine_time = #{realMachineTime,jdbcType=DECIMAL},
      </if>
      <if test="realLaborTime != null">
        real_labor_time = #{realLaborTime,jdbcType=DECIMAL},
      </if>
      <if test="realOtherTime != null">
        real_other_time = #{realOtherTime,jdbcType=DECIMAL},
      </if>
      <if test="realStartTime != null">
        real_start_time = #{realStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realFinishTime != null">
        real_finish_time = #{realFinishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procMins != null">
        proc_mins = #{procMins,jdbcType=DECIMAL},
      </if>
      <if test="realCost != null">
        real_cost = #{realCost,jdbcType=DECIMAL},
      </if>
      <if test="otherWorkPrice != null">
        other_work_price = #{otherWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="machineWorkPrice != null">
        machine_work_price = #{machineWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="laborWorkPrice != null">
        labor_work_price = #{laborWorkPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="handlerId != null">
        handler_id = #{handlerId,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mt.pm.common.model.PmTicketConfirm">
    update pm_ticket_confirm
    set batch_proc_Id = #{batchProcId,jdbcType=BIGINT},
    po_id = #{poId,jdbcType=BIGINT},
    pop_id = #{popId,jdbcType=BIGINT},
    confirm_no = #{confirmNo,jdbcType=VARCHAR},
    confirm_seq = #{confirmSeq,jdbcType=INTEGER},
    confirm_type = #{confirmType,jdbcType=CHAR},
    confirm_flag = #{confirmFlag,jdbcType=CHAR},
    confirm_qty = #{confirmQty,jdbcType=INTEGER},
    device_id = #{deviceId,jdbcType=BIGINT},
    member_id = #{memberId,jdbcType=BIGINT},
    is_leading = #{isLeading,jdbcType=CHAR},
    real_machine_time = #{realMachineTime,jdbcType=DECIMAL},
    real_labor_time = #{realLaborTime,jdbcType=DECIMAL},
    real_other_time = #{realOtherTime,jdbcType=DECIMAL},
    real_start_time = #{realStartTime,jdbcType=TIMESTAMP},
    real_finish_time = #{realFinishTime,jdbcType=TIMESTAMP},
    proc_mins = #{procMins,jdbcType=DECIMAL},
    real_cost = #{realCost,jdbcType=DECIMAL},
    other_work_price = #{otherWorkPrice,jdbcType=DECIMAL},
    machine_work_price = #{machineWorkPrice,jdbcType=DECIMAL},
    labor_work_price = #{laborWorkPrice,jdbcType=DECIMAL},
    remark = #{remark,jdbcType=VARCHAR},
    handler_id = #{handlerId,jdbcType=BIGINT},
    created_at = #{createdAt,jdbcType=TIMESTAMP},
    updated_at = #{updatedAt,jdbcType=TIMESTAMP},
    status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 自定义添加  -->


  <select id="getTotalCountByConditions" resultType="java.lang.Long">
    SELECT   count(1)
    from pm_prod_order a
    INNER JOIN pm_prod_order_sub b on a.`status` = 1 and b.`status` = 1 and a.id = b.po_id
    LEFT JOIN pm_ticket_incept c on b.id = c.pop_id and c.incept_flag = '1' and c.`status` = 1
    where ( (#{pop_status} is null and b.pop_status in (2, 3))  or  b.pop_status = #{pop_status} )
    <if test="pgIdArray != null and pgIdArray.length != 0">
      AND b.pg_id in
      <foreach collection="pgIdArray" item="pg_id"
               index="index" open="(" close=")" separator=",">
        #{pg_id}
      </foreach>
    </if>
    order by  b.updated_at desc
  </select>

  <select id="selectByConditions" resultType="Map">
    SELECT   mat_name,
                mat_id,
                mat_model,
                mat_no,
                mat_type_id,
                mat_type_name,
    DATE_FORMAT(b.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
    DATE_FORMAT(b.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
                b.plan_work_time,
                b.po_id,
                po_no,
                b.id as pop_id,
                b.pop_status,
                case
                  when b.plan_end_time is null then '1'
                  when DATEDIFF(NOW(), b.plan_end_time) >= 0 then '4'
                  when a.pri is null or trim(a.pri) = '' then '1'
                  else trim(a.pri)
                end as pri_flag,
                -- 	紧急程度	string	0不能领取，1正常，2急，3紧急，4脱期
                b.proc_qty,
                b.proc_seq,
                b.proc_name,
    DATE_FORMAT(b.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
    DATE_FORMAT(b.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time,
                b.pg_id,
                b.pg_name
    from pm_prod_order a
    INNER JOIN pm_prod_order_sub b on a.`status` = 1 and b.`status` = 1 and a.id = b.po_id
    LEFT JOIN pm_ticket_incept c on b.id = c.pop_id and c.incept_flag = '1' and c.`status` = 1
    where ( (#{pop_status} is null  and b.pop_status in (2, 3))  or  b.pop_status = #{pop_status} )
    <if test="pgIdArray != null and pgIdArray.length != 0">
      AND b.pg_id in
      <foreach collection="pgIdArray" item="pg_id"
               index="index" open="(" close=")" separator=",">
        #{pg_id}
      </foreach>
    </if>
    order by  b.pg_id, b.updated_at desc
   <!-- limit #{page}, #{page_size} 去掉分页 -->
  </select>

  <select id="selectMyAllocatedPop" resultType="Map">
    SELECT h.mat_name,
      h.mat_id,
      h.mat_model,
      h.mat_no,
      h.mat_type_id,
      h.mat_type_name,
      a.plan_end_time,
      a.plan_start_time,
      a.plan_work_time,
      a.po_id,
      h.po_no,
      b.pop_id,
      a.pop_status,
      '1' as  pop_task_flag,
      case
      when a.plan_end_time is null then '1'
      when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
      when h.pri is null or trim(h.pri) = '' then '1'
      else trim(h.pri)
      end as pri_flag,
      -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
      a.proc_qty,
      a.proc_seq,
      a.real_end_time,
      a.real_start_time
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.member_id = #{uid}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
</select>

  <select id="selectMyDeviceAllocatedPop" resultType="Map">
    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    a.plan_end_time,
    a.plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '1' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    a.real_end_time,
    a.real_start_time
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.device_id in (select id from pm_pg_device where manager_id = #{uid} and pg_id = #{pg_id})
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
  </select>

  <select id="selectOneDeviceAllocatedPop" resultType="Map">
    -- 查询某个设备已分配的加工任务
    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    a.plan_end_time,
    a.plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '1' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    a.real_end_time,
    a.real_start_time
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.device_id = #{device_id}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
  </select>

  <select id="selectPgUnAllocatedPop" resultType="Map">
    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    a.plan_end_time,
    a.plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '2' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    a.real_end_time,
    a.real_start_time
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and not exists(select 1 from pm_ticket_allocate where b.id = incept_id)
    and a.pg_id = #{pg_id}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
  </select>

  <select id="selectMyCanProcessPop" resultType="Map">
    SELECT * from
    (
    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
    DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '1' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
    DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time,
    a.pg_id,
    a.pg_name,
    a.pg_type
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.member_id = #{uid}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>

    UNION

    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
    DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '1' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
    DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time,
    a.pg_id,
    a.pg_name,
    a.pg_type
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.device_id in (select id from pm_pg_device where manager_id = #{uid} and pg_id = #{pg_id})
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>

    UNION

    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
    DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '2' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
    DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time,
    a.pg_id,
    a.pg_name,
    a.pg_type
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and not exists(select 1 from pm_ticket_allocate where b.id = incept_id)
    and a.pg_id = #{pg_id}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
    ) as myCanProcessPop

    order by  pg_id, po_no desc
    <!-- limit #{page}, #{page_size} -->
  </select>

  <select id="getMyCanProcessPopCount" resultType="java.lang.Long">
    SELECT count(1) from
    (
    SELECT a.*
    from pm_prod_order_sub a
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.member_id = #{uid}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>

    UNION

    SELECT a.*
    from pm_prod_order_sub a
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and a.pg_id = #{pg_id}
    and c.device_id in (select id from pm_pg_device where manager_id = #{uid} and pg_id = #{pg_id})
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>

    UNION

    SELECT a.*
    from pm_prod_order_sub a
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and not exists(select 1 from pm_ticket_allocate where b.id = incept_id)
    and a.pg_id = #{pg_id}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
    ) as myCanProcessPop
  </select>

  <select id="getMyPgDevice" resultType="Map">
    SELECT
    id as device_id,
    device_name,
    device_no,
    device_pic,
    device_status, --	设备状态	string	0正常待加工，1正常加工中，2检修中，3维修中，4报废
    manager_id,
    manager_name,
    <!-- case when device_status = 1 then last_pop_id else null end as pop_id, -->
    DATE_FORMAT(prod_date,'%Y-%m-%d %H:%i:%s') as prod_date,
    <!-- case when manager_id = #{uid} then '1' else 2 end as resource_flag, -->
    case when manager_id = #{uid} then '1'
    when #{uid} = c.member_id and c.is_leading = 0 then '2'
    else '' end as resource_flag,
    work_life
    from pm_pg_device h
    left JOIN (
      SELECT distinct a.device_id, a.member_id, a.is_leading  from pm_ticket_confirm a
      inner join pm_prod_order_sub b on a.pop_id = b.id and b.pg_id = #{pg_id}
      where a.status = 1 and a.confirm_flag = 1
      and a.confirm_type = 0
      ) c on h.id = c.device_id
    where h.status = 1
    and h.device_status in (0, 1, 2, 3)
    and h.pg_id = #{pg_id}
    order by  h.updated_at desc
    <!-- limit #{page}, #{page_size} -->
  </select>

  <select id="getMyPgDeviceCount" resultType="Map">
    SELECT count(1)

    from pm_pg_device
    where pg_id = #{pg_id}
  </select>

  <select id="getMyPgMember" resultType="Map">
    SELECT
    h.member_id,
    is_leader,
    case when h.member_id = #{uid} then '1' else 2 end as member_flag, -- 1当前用户，2非当前用户
    member_name,
    member_status, --	人员状态	string	0正常待加工，1正常加工中，2休假，3其它 (0为可用，其它为不可用）
    <!-- case when member_status = 1 then last_pop_id else null end as pop_id -->
    c.batch_proc_id
    from pm_pg_member h
    left JOIN (
    SELECT distinct a.member_id, a.batch_proc_id  from pm_ticket_confirm a
    inner join pm_prod_order_sub b on a.pop_id = b.id and b.pg_id = #{pg_id}
    where a.status = 1 and a.confirm_flag = 1
    and a.confirm_type = 0
    and a.device_id is null
    ) c on h.member_id = c.member_id
    where pg_id = #{pg_id}
    order by c.batch_proc_id desc
    <!-- limit #{page}, #{page_size} -->
  </select>

  <select id="getMyPgMemberCount" resultType="java.lang.Long">
    SELECT count(1)
    from pm_pg_member
    where pg_id = #{pg_id}
  </select>

  <select id="selectProcInfoByResourceId" resultType="Map">
    <if test="type == 0">
      SELECT   mat_name,
                  mat_id,
                  mat_model,
                  mat_no,
                  mat_type_id,
                  mat_type_name,
      DATE_FORMAT(b.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
      DATE_FORMAT(b.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
                  b.plan_work_time,
                  b.po_id,
                  po_no,
                  b.id as pop_id,
                  b.pop_status,
                  case
                  when b.plan_end_time is null then '1'
                  when DATEDIFF(NOW(), b.plan_end_time) >= 0 then '4'
                  when a.pri is null or trim(a.pri) = '' then '1'
                  else trim(a.pri)
                  end as pri_flag,
                  -- 	紧急程度	string	0不能领取，1正常，2急，3紧急，4脱期
                  b.proc_qty,
                  b.proc_seq,
      concat(ifnull(b.proc_name,''), ifnull(b.proc_desc,'')) as proc_desc,
      DATE_FORMAT(b.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
      DATE_FORMAT(b.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time
      from pm_prod_order a
      INNER JOIN pm_prod_order_sub b on a.`status` = 1 and b.`status` = 1 and a.id = b.po_id
      INNER JOIN pm_ticket_confirm c on b.id =  c.pop_id and c.confirm_type = 0 and c.confirm_flag = 1 and c.`status` = 1
      where b.pg_id  = #{pg_id}
      and c.device_id = #{resource_id}
      ORDER BY c.confirm_no desc
    </if>

    <if test="type == 1">
      SELECT   mat_name,
      mat_id,
      mat_model,
      mat_no,
      mat_type_id,
      mat_type_name,
      DATE_FORMAT(b.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
      DATE_FORMAT(b.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
      b.plan_work_time,
      b.po_id,
      po_no,
      b.id as pop_id,
      b.pop_status,
      case
      when b.plan_end_time is null then '1'
      when DATEDIFF(NOW(), b.plan_end_time) >= 0 then '4'
      when a.pri is null or trim(a.pri) = '' then '1'
      else trim(a.pri)
      end as pri_flag,
      -- 	紧急程度	string	0不能领取，1正常，2急，3紧急，4脱期
      b.proc_qty,
      b.proc_seq,
      concat(ifnull(b.proc_name,''), ifnull(b.proc_desc,'')) as proc_desc,
      DATE_FORMAT(b.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
      DATE_FORMAT(b.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time
      from pm_prod_order a
      INNER JOIN pm_prod_order_sub b on a.`status` = 1 and b.`status` = 1 and a.id = b.po_id
      INNER JOIN pm_ticket_confirm c on b.id =  c.pop_id and c.confirm_type = 0 and c.confirm_flag = 1 and c.`status` = 1
      where b.pg_id  = #{pg_id}
      and c.member_id = #{resource_id}
      ORDER BY c.confirm_no desc
    </if>
  </select>


  <select id="selectOneResourceCanProcessPop" resultType="Map">
    SELECT * from
    (
    <if test="type == 0 || type == '0'">
      -- 查询某个设备已分配的加工任务
      SELECT h.mat_name,
      h.mat_id,
      h.mat_model,
      h.mat_no,
      h.mat_type_id,
      h.mat_type_name,
      DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
      DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
      a.plan_work_time,
      a.po_id,
      h.po_no,
      b.pop_id,
      a.pop_status,
      '1' as  pop_task_flag,
      case
      when a.plan_end_time is null then '1'
      when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
      when h.pri is null or trim(h.pri) = '' then '1'
      else trim(h.pri)
      end as pri_flag,
      -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
      a.proc_qty,
      a.proc_seq,
      DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
      DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time
      from pm_prod_order h
      INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
      INNER JOIN pm_ticket_incept b on a.id = b.pop_id
      INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
      where a.`status`= '1'
      and b.incept_flag = '1'
      and b.`status`= '1'
      and a.pg_id = #{pg_id}
      and c.device_id = #{resource_id}
      <if test="popStatusArray != null and popStatusArray.length != 0">
        AND a.pop_status in
        <foreach collection="popStatusArray" item="pop_status"
                 index="index" open="(" close=")" separator=",">
          #{pop_status}
        </foreach>
      </if>
    </if>

    <if test="type == 1 || type == '1'">
      SELECT h.mat_name,
      h.mat_id,
      h.mat_model,
      h.mat_no,
      h.mat_type_id,
      h.mat_type_name,
      DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
      DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
      a.plan_work_time,
      a.po_id,
      h.po_no,
      b.pop_id,
      a.pop_status,
      '1' as  pop_task_flag,
      case
      when a.plan_end_time is null then '1'
      when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
      when h.pri is null or trim(h.pri) = '' then '1'
      else trim(h.pri)
      end as pri_flag,
      -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
      a.proc_qty,
      a.proc_seq,
      DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
      DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time
      from pm_prod_order h
      INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
      INNER JOIN pm_ticket_incept b on a.id = b.pop_id
      INNER JOIN pm_ticket_allocate c on b.id = c.incept_id
      where a.`status`= '1'
      and b.incept_flag = '1'
      and b.`status`= '1'
      and a.pg_id = #{pg_id}
      and c.member_id = #{resource_id}
      <if test="popStatusArray != null and popStatusArray.length != 0">
        AND a.pop_status in
        <foreach collection="popStatusArray" item="pop_status"
                 index="index" open="(" close=")" separator=",">
          #{pop_status}
        </foreach>
      </if>
    </if>


    UNION

    SELECT h.mat_name,
    h.mat_id,
    h.mat_model,
    h.mat_no,
    h.mat_type_id,
    h.mat_type_name,
    DATE_FORMAT(a.plan_end_time,'%Y-%m-%d %H:%i:%s') as plan_end_time,
    DATE_FORMAT(a.plan_start_time,'%Y-%m-%d %H:%i:%s') as plan_start_time,
    a.plan_work_time,
    a.po_id,
    h.po_no,
    b.pop_id,
    a.pop_status,
    '2' as  pop_task_flag,
    case
    when a.plan_end_time is null then '1'
    when DATEDIFF(NOW(), a.plan_end_time) >= 0 then '4'
    when h.pri is null or trim(h.pri) = '' then '1'
    else trim(h.pri)
    end as pri_flag,
    -- pri_flag	优先级	string	0不能领取，1正常，2急，3紧急，4脱期
    a.proc_qty,
    a.proc_seq,
    DATE_FORMAT(a.real_end_time,'%Y-%m-%d %H:%i:%s') as real_end_time,
    DATE_FORMAT(a.real_start_time,'%Y-%m-%d %H:%i:%s') as real_start_time
    from pm_prod_order h
    INNER JOIN pm_prod_order_sub a  on h.id = a.po_id
    INNER JOIN pm_ticket_incept b on a.id = b.pop_id
    where a.`status`= '1'
    and b.incept_flag = '1'
    and b.`status`= '1'
    and not exists(select 1 from pm_ticket_allocate where b.id = incept_id)
    and a.pg_id = #{pg_id}
    <if test="popStatusArray != null and popStatusArray.length != 0">
      AND a.pop_status in
      <foreach collection="popStatusArray" item="pop_status"
               index="index" open="(" close=")" separator=",">
        #{pop_status}
      </foreach>
    </if>
    ) as myCanProcessPop

    order by  po_no desc
  </select>

  <select id="selectByPopIdAndMemberId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from pm_Ticket_confirm
    where status = 1
    and confirm_flag = '1'
    and pop_id = #{popId}
    and member_id = #{memberId}
  </select>

  <select id="selectByPopId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from pm_ticket_confirm
    where status = 1
    and confirm_flag = 1
    and ( #{popId} is null or #{popId} = pop_id )
    and ( #{confirmType} is null or #{confirmType} = confirm_type )
    and ( #{deviceId} is null or #{deviceId} = device_id )

    UNION

    SELECT
    <include refid="Base_Column_List"/>
    from pm_ticket_confirm
    where status = 1
    and confirm_flag = 1
    and ( #{popId} is null or #{popId} = pop_id )
    and ( #{confirmType} is null or #{confirmType} = confirm_type )
    and ( device_id is null)
    and ( #{memberId} is null or #{memberId} = member_id )

  </select>

  <select id="getMaxBatchProcId" resultType="java.lang.Long">
    select max(batch_proc_id) from pm_ticket_confirm
  </select>

  <select id="getProcessingBatchProcIdByPopId" resultType="java.lang.Long">
    select max(batch_proc_id)
    from pm_ticket_confirm
    where status = 1
    and confirm_flag = 1
    and confirm_type = 0
    and pop_id = #{popId}
  </select>

  <select id="selectProcessingByBatchProcId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from pm_ticket_confirm
    where status = 1
    and confirm_flag = 1
    and confirm_type = 0
    and batch_proc_id = #{batchProcId}
  </select>

</mapper>