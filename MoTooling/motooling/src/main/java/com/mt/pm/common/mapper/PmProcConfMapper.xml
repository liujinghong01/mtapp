<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.pm.common.dao.PmProcConfMapper">
  <resultMap id="BaseResultMap" type="com.mt.pm.common.model.PmProcConf">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="proc_no" jdbcType="VARCHAR" property="procNo" />
    <result column="proc_name" jdbcType="VARCHAR" property="procName" />
    <result column="proc_desc" jdbcType="VARCHAR" property="procDesc" />
    <result column="ass_unit" jdbcType="VARCHAR" property="assUnit" />
    <result column="ass_calc_qty" jdbcType="DECIMAL" property="assCalcQty" />
    <result column="ass_time" jdbcType="DECIMAL" property="assTime" />
    <result column="ass_up" jdbcType="DECIMAL" property="assUp" />
    <result column="proc_type" jdbcType="TINYINT" property="procType" />
    <result column="is_can_ass" jdbcType="CHAR" property="isCanAss" />
    <result column="other_time" jdbcType="DECIMAL" property="otherTime" />
    <result column="ass_sup_id" jdbcType="INTEGER" property="assSupId" />
    <result column="sort" jdbcType="DECIMAL" property="sort" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="status" jdbcType="CHAR" property="status" />
    <association property="pgList" column="id" select="com.mt.pm.common.dao.PmProcPgMapper.selectByProcId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id,company_id, company_name, proc_no, proc_name, proc_desc, ass_unit, ass_calc_qty, ass_time, ass_up, proc_type,
    is_can_ass, other_time, ass_sup_id, sort, created_at, updated_at, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pm_proc_conf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pm_proc_conf
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mt.pm.common.model.PmProcConf">
    insert into pm_proc_conf (id,company_id, company_name, proc_no, proc_name,
      proc_desc, ass_unit, ass_calc_qty, 
      ass_time, ass_up, proc_type, 
      is_can_ass, other_time, ass_sup_id,
      sort, created_at, updated_at, 
      status)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR},
      #{procNo,jdbcType=VARCHAR}, #{procName,jdbcType=VARCHAR},
      #{procDesc,jdbcType=VARCHAR}, #{assUnit,jdbcType=VARCHAR}, #{assCalcQty,jdbcType=DECIMAL}, 
      #{assTime,jdbcType=DECIMAL}, #{assUp,jdbcType=DECIMAL}, #{procType,jdbcType=TINYINT}, 
      #{isCanAss,jdbcType=CHAR}, #{otherTime,jdbcType=DECIMAL}, #{assSupId,jdbcType=INTEGER},
      #{sort,jdbcType=DECIMAL}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR})
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.mt.pm.common.model.PmProcConf">
    insert into pm_proc_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="procNo != null">
        proc_no,
      </if>
      <if test="procName != null">
        proc_name,
      </if>
      <if test="procDesc != null">
        proc_desc,
      </if>
      <if test="assUnit != null">
        ass_unit,
      </if>
      <if test="assCalcQty != null">
        ass_calc_qty,
      </if>
      <if test="assTime != null">
        ass_time,
      </if>
      <if test="assUp != null">
        ass_up,
      </if>
      <if test="procType != null">
        proc_type,
      </if>
      <if test="isCanAss != null">
        is_can_ass,
      </if>
      <if test="otherTime != null">
        other_time,
      </if>
      <if test="assSupId != null">
        ass_sup_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="procNo != null">
        #{procNo,jdbcType=VARCHAR},
      </if>
      <if test="procName != null">
        #{procName,jdbcType=VARCHAR},
      </if>
      <if test="procDesc != null">
        #{procDesc,jdbcType=VARCHAR},
      </if>
      <if test="assUnit != null">
        #{assUnit,jdbcType=VARCHAR},
      </if>
      <if test="assCalcQty != null">
        #{assCalcQty,jdbcType=DECIMAL},
      </if>
      <if test="assTime != null">
        #{assTime,jdbcType=DECIMAL},
      </if>
      <if test="assUp != null">
        #{assUp,jdbcType=DECIMAL},
      </if>
      <if test="procType != null">
        #{procType,jdbcType=TINYINT},
      </if>
      <if test="isCanAss != null">
        #{isCanAss,jdbcType=CHAR},
      </if>
      <if test="otherTime != null">
        #{otherTime,jdbcType=DECIMAL},
      </if>
      <if test="assSupId != null">
        #{assSupId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mt.pm.common.model.PmProcConf">
    update pm_proc_conf
    <set>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="procNo != null">
        proc_no = #{procNo,jdbcType=VARCHAR},
      </if>
      <if test="procName != null">
        proc_name = #{procName,jdbcType=VARCHAR},
      </if>
      <if test="procDesc != null">
        proc_desc = #{procDesc,jdbcType=VARCHAR},
      </if>
      <if test="assUnit != null">
        ass_unit = #{assUnit,jdbcType=VARCHAR},
      </if>
      <if test="assCalcQty != null">
        ass_calc_qty = #{assCalcQty,jdbcType=DECIMAL},
      </if>
      <if test="assTime != null">
        ass_time = #{assTime,jdbcType=DECIMAL},
      </if>
      <if test="assUp != null">
        ass_up = #{assUp,jdbcType=DECIMAL},
      </if>
      <if test="procType != null">
        proc_type = #{procType,jdbcType=TINYINT},
      </if>
      <if test="isCanAss != null">
        is_can_ass = #{isCanAss,jdbcType=CHAR},
      </if>
      <if test="otherTime != null">
        other_time = #{otherTime,jdbcType=DECIMAL},
      </if>
      <if test="assSupId != null">
        ass_sup_id = #{assSupId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mt.pm.common.model.PmProcConf">
    update pm_proc_conf
    set  company_id = #{companyId,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      proc_no = #{procNo,jdbcType=VARCHAR},
      proc_name = #{procName,jdbcType=VARCHAR},
      proc_desc = #{procDesc,jdbcType=VARCHAR},
      ass_unit = #{assUnit,jdbcType=VARCHAR},
      ass_calc_qty = #{assCalcQty,jdbcType=DECIMAL},
      ass_time = #{assTime,jdbcType=DECIMAL},
      ass_up = #{assUp,jdbcType=DECIMAL},
      proc_type = #{procType,jdbcType=TINYINT},
      is_can_ass = #{isCanAss,jdbcType=CHAR},
      other_time = #{otherTime,jdbcType=DECIMAL},
      ass_sup_id = #{assSupId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=DECIMAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectProcessBycondition" parameterType="Map" resultType="Map">
    select
    <include refid="Base_Column_List" />
    from pm_proc_conf WHERE 1=1
    <if test="company_id != null and company_id !=''">
      and company_id = #{company_id}
    </if>
    <if test="proc_no != null and proc_no !=''">
      and proc_no = #{proc_no}
    </if>
    <if test="proc_name != null and proc_name !=''">
      and proc_name LIKE  CONCAT('%','${proc_name}','%' )
    </if>
    <if test="status != null and status !=''">
      and status = #{status}
    </if>
    ORDER  by proc_no DESC
    limit #{page}, #{page_size}
  </select>

  <select id="selectProcessByconditionCount" resultType="java.lang.Integer" parameterType="Map">
    SELECT count(1)
    from pm_proc_conf WHERE 1=1
    <if test="company_id != null and company_id !=''">
      and company_id = #{company_id}
    </if>
    <if test="proc_no != null and proc_no !=''">
      and proc_no = #{proc_no}
    </if>
    <if test="proc_name != null and proc_name !=''">
      and proc_name LIKE  CONCAT('%','${proc_name}','%' )
    </if>
    <if test="status != null and status !=''">
      and status = #{status}
    </if>
  </select>

</mapper>