<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mt.iv.common.dao.BasicDataQueryMapper">

    <select id="selectInStoreTypeList" resultType="map">
        SELECT  dict_code as code,dict_name as name FROM dictionary_mt WHERE  dict_type='IN_STORE_TYPE'
    </select>

    <select id="selectOutStoreTypeList" resultType="map">
        SELECT  dict_code as code,dict_name as name FROM dictionary_mt WHERE  dict_type='OUT_STORE_TYPE'
    </select>

    <select id="selectIvMatTypeList" resultType="map" parameterType="map">
        SELECT  is_qc,bin_no,bin_name,store_house_id,store_house_name,id as mat_type_id,mat_no_prefix,type_name as mat_type_name,procure_style,unit,is_default  FROM bm_mat_type
              where company_id = #{company_id}
                <if test="is_paging != 0">
                    limit #{page},#{page_size}
                </if>
    </select>

    <select id="IvMatTypeListTotalCount" resultType="java.lang.Integer" parameterType="map">
           SELECT  count(id)  FROM bm_mat_type  where company_id = #{company_id}
    </select>

    <select id="selectIvStoreDirectChange" resultType="map" >
        SELECT  dict_code as code,dict_name as name FROM dictionary_mt WHERE  dict_type='STORE_DIRECT_CHANGE'
    </select>


    <!-- 根据缺省部门编码查出部门ID-->
    <select id="selectDepId" parameterType="map" resultType="map">
            select all_upper_ids ,name as dep_name, dep_id FROM department where
             <if test="dep_code != null and dep_code != ''">
                 dep_code=#{dep_code} and company_id =#{company_id}
             </if>
             <if test="dep_id != null and dep_id != ''">
                 all_upper_ids REGEXP #{dep_id}
             </if>
              and status=1
    </select>


    <select id="seslectDepIdUser" parameterType="java.lang.Long" resultType="map">
         select
                  uc.work_phone,uc.work_state,uc.work_email, uc.work_name, uc.position_name,uc.position_code,
 		          uc.uid as member_id,  u.avatar as icon, d.name as dep_name, d.dep_id
            from user_company as uc LEFT JOIN user as u   ON u.uid = uc.uid
                  LEFT JOIN department d on uc.dep_id = d.dep_id
              where uc.dep_id in
                  <foreach collection="list" item="depId" open="(" close=")" separator=",">
                      #{depId}
                  </foreach>
                 ORDER BY d.dep_id
    </select>


</mapper>